{"version":3,"sources":["webpack:///./src/components/Article/Article.js","webpack:///./src/components/List/List.js","webpack:///./src/components/Article/Headline.js","webpack:///./src/templates/CategoryTemplate.js"],"names":["Article","props","children","theme","Fragment","space","inset","default","text","maxWidth","tablet","desktop","List","edges","stack","m","xs","font","size","s","lineHeight","l","map","edge","node","title","frontmatter","slug","fields","key","to","Headline","xxl","time","duration","long","weight","standard","color","brand","primary","xl","CategoryTemplate","category","pageContext","data","allMarkdownRemark","totalCount","facebook","site","siteMetadata","Consumer","className","categoryQuery"],"mappings":"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","file":"component---src-templates-category-template-js-5efeae3fc11ad7b26f05.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Article = (props) => {\n  const { children, theme } = props;\n\n  return (\n    <React.Fragment>\n      <article className=\"article\">{children}</article>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        .article {\n          padding: ${theme.space.inset.default};\n          margin: 0 auto;\n        }\n        @from-width tablet {\n          .article {\n            padding: ${`calc(${theme.space.default}) calc(${theme.space.default} * 2)`};\n            max-width: ${theme.text.maxWidth.tablet};\n          }\n        }\n        @from-width desktop {\n          .article {\n            padding: ${`calc(${theme.space.default} * 2 + 90px) 0 calc(${theme.space.default} * 2)`};\n            max-width: ${theme.text.maxWidth.desktop};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nArticle.propTypes = {\n  children: PropTypes.node.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default Article;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nconst List = (props) => {\n  const { edges, theme } = props;\n\n  return (\n    <React.Fragment>\n      <ul>\n        {edges.map((edge) => {\n          const {\n            node: {\n              frontmatter: { title },\n              fields: { slug },\n            },\n          } = edge;\n\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        ul {\n          margin: ${theme.space.stack.m};\n          padding: ${theme.space.m};\n          list-style: circle;\n        }\n        li {\n          padding: ${theme.space.xs} 0;\n          font-size: ${theme.font.size.s};\n          line-height: ${theme.font.lineHeight.l};\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nList.propTypes = {\n  edges: PropTypes.array.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default List;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Headline = (props) => {\n  const { title, children, theme } = props;\n\n  return (\n    <React.Fragment>\n      {title ? <h1>{title}</h1> : <h1>{children}</h1>}\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        h1 {\n          font-size: ${theme.font.size.xxl};\n          margin: ${theme.space.stack.l};\n          animation-name: headlineEntry;\n          animation-duration: ${theme.time.duration.long};\n\n          :global(span) {\n            font-weight: ${theme.font.weight.standard};\n            display: block;\n            font-size: 0.5em;\n            letter-spacing: 0;\n            margin: ${theme.space.stack.xs};\n          }\n\n          :global(svg) {\n            height: 0.75em;\n            fill: ${theme.color.brand.primary};\n          }\n        }\n\n        @keyframes headlineEntry {\n          from {\n            opacity: 0.5;\n          }\n          to {\n            opacity: 1;\n          }\n        }\n\n        @from-width tablet {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.2)`};\n          }\n        }\n\n        @from-width desktop {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.4)`};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nHeadline.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default Headline;\n","import { FaTag } from \"react-icons/fa/\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Seo from \"../components/Seo\";\nimport { ThemeContext } from \"../layouts\";\nimport Article from \"../components/Article\";\nimport Headline from \"../components/Article/Headline\";\nimport List from \"../components/List\";\n\nconst CategoryTemplate = (props) => {\n  const {\n    pageContext: { category },\n    data: {\n      allMarkdownRemark: { totalCount, edges },\n      site: {\n        siteMetadata: { facebook },\n      },\n    },\n  } = props;\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {(theme) => (\n          <Article theme={theme}>\n            <header>\n              <Headline theme={theme}>\n                <span>Posts in category</span> <FaTag />\n                {category}\n              </Headline>\n              <p className=\"meta\">\n                There {totalCount > 1 ? \"are\" : \"is\"} <strong>{totalCount}</strong> post\n                {totalCount > 1 ? \"s\" : \"\"} in the category.\n              </p>\n              <List edges={edges} theme={theme} />\n            </header>\n          </Article>\n        )}\n      </ThemeContext.Consumer>\n\n      <Seo facebook={facebook} />\n    </React.Fragment>\n  );\n};\n\nCategoryTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.object.isRequired,\n};\n\nexport default CategoryTemplate;\n\n// eslint-disable-next-line no-undef\nexport const categoryQuery = graphql`\n  query PostsByCategory($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___prefix], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            category\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        facebook {\n          appId\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}